name: CI/CD Pipeline

on:
  push:
    paths:
      - ${{ values.app_name }}/** # Gatilho para alterações no diretório da aplicação
    branches:
      - main

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      # Define uma saída para este job, que poderá ser usada em outros jobs
      image_tag: ${{ '${{ steps.set-tag.outputs.tag }}' }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Definir a tag da imagem (SHA reduzido)
        id: set-tag
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          echo "tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKERHUB_TOKEN }}' }}

      - name: Build e Push da imagem
        # A tag da imagem é recuperada da saída do passo 'set-tag'
        run: |
          docker build -t ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}/${{ values.app_name }}:${{ '${{ steps.set-tag.outputs.tag }}' }} .
          docker push ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}/${{ values.app_name }}:${{ '${{ steps.set-tag.outputs.tag }}' }}

  update-image-tag:
    # Garante que este job só rode após o sucesso do job anterior
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      # Este passo de checkout é necessário para a action create-pull-request funcionar no mesmo repositório
      # Se o seu código da app e do helm estiverem em repositórios diferentes, use o checkout original
      - name: Checkout do código do deployment
        uses: actions/checkout@v3
        with:
          # Repositório que contém os charts do Helm
          repository: uday-platform-idp-org/${{ values.app_name }}
          token: ${{ '${{ secrets.PERSONAL_ACCESS_TOKEN }}' }}
          path: infra # Clona para dentro do diretório 'infra'

      - name: Atualizar a tag da imagem no Helm values.yaml
        env:
          # Passa a tag do job anterior para uma variável de ambiente deste passo
          NEW_TAG: ${{ '${{ needs.build-and-push-image.outputs.image_tag }}' }}
        run: |
          echo "Alterando a tag da imagem para: $NEW_TAG"
          # O sed agora usa a variável de ambiente $NEW_TAG. Isso é mais seguro e legível.
          sed -i "s/^\( *tag:\).*/\1 $NEW_TAG/" infra/charts/${{ values.app_name }}/values.yaml

      - name: Criar Pull Request com a atualização
        uses: peter-evans/create-pull-request@v6
        with:
          # Aponta para o diretório que contém o repositório clonado
          path: infra
          token: ${{ '${{ secrets.PERSONAL_ACCESS_TOKEN }}' }}
          # A action criará o commit, a branch e o PR automaticamente
          commit-message: "chore: Atualiza imagem de ${{ values.app_name }} para ${{ '${{ needs.build-and-push-image.outputs.image_tag }}' }}"
          title: "CI: Atualiza imagem para ${{ '${{ needs.build-and-push-image.outputs.image_tag }}' }}"
          body: "PR criado automaticamente pela pipeline para atualizar a tag da imagem no Helm para a versão **${{ '${{ needs.build-and-push-image.outputs.image_tag }}' }}**."
          # Cria uma branch mais descritiva
          branch: "ci/update-image-${{ '${{ needs.build-and-push-image.outputs.image_tag }}' }}"
          base: main
          # Deleta a branch após o merge do PR
          delete-branch: true